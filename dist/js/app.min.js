/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ndocument.addEventListener('DOMContentLoaded', function () {\n    let burger = document.querySelector('.hamburger');\n    let mobile = document.querySelector('.mega-block');\n    burger.addEventListener('click', () => {\n        if (burger.classList.contains('active')) {\n            burger.classList.remove('active');\n            mobile.classList.remove('active');\n            document.body.style.overflow = \"visible\";\n        } else {\n            burger.classList.add('active');\n            mobile.classList.add('active');\n            document.body.style.overflow = \"hidden\";\n        }\n    });\n\n\n    let parentLinks = document.querySelectorAll('.mega-menu__item--parent .mega-menu__link')\n    if (parentLinks) {\n        for (let i = 0; i < parentLinks.length; i++) {\n            parentLinks[i].addEventListener('click', function () {\n                let activeParentLink = document.querySelector('.mega-menu__item--parent .mega-menu__link.active')\n                if (activeParentLink){\n                    activeParentLink.classList.remove('active')\n                    activeParentLink.nextElementSibling.style.maxHeight = `0px`\n                }\n                this.classList.add('active');\n                let maxHeight = this.nextElementSibling.querySelector('.mega-menu__subitems').clientHeight\n                let activeSubmenu = this.nextElementSibling\n                activeSubmenu.style.maxHeight = `${maxHeight}px`\n            })\n        }\n    }\n\n\n    let faqsTop = document.querySelectorAll('.faq-item__top');\n    if (faqsTop) {\n        faqsTop.forEach(faqTop => {\n            faqTop.addEventListener('click', () => {\n                let text = faqTop.parentNode.parentNode.querySelector('.faq-item__bottom')\n                let height = faqTop.parentNode.parentNode.querySelector('.faq-item__text').clientHeight\n\n                if (faqTop.classList.contains('active')) {\n                    faqTop.classList.remove('active');\n                    console.log(height);\n                    text.style.maxHeight = `0px`;\n                } else {\n                    faqTop.classList.add('active');\n                    console.log(height);\n                    text.style.maxHeight = `${height}px`;\n                }\n            })\n        });\n    }\n\n    // функция для модалки\n\n    function calcScroll() {\n        let div = document.createElement('div');\n\n        div.style.width = '50px';\n        div.style.height = '50px';\n        div.style.overflowY = 'scroll';\n        div.style.visibility = 'hidden';\n\n        document.body.appendChild(div);\n        let scarollWidth = div.offsetWidth - div.clientWidth;\n        div.remove();\n\n        return scarollWidth;\n    }\n\n    let scrollWidth = calcScroll();\n\n    function modal(modal, modalActiveClass, triggers, modalClose) {\n        const triggers_ = document.querySelectorAll(triggers),\n            modal_ = document.querySelector(modal),\n            modalClose_ = document.querySelector(modalClose);\n\n        if (triggers_.length > 0) {\n            triggers_.forEach(item => {\n                item.addEventListener('click', () => {\n                    modal_.classList.add(modalActiveClass);\n                    document.body.style.overflow = 'hidden';\n                    document.body.style.marginRight = `${scrollWidth}px`;\n                });\n            });\n\n            modalClose_.addEventListener('click', () => {\n                modal_.classList.remove(modalActiveClass);\n                document.body.style.overflow = '';\n                document.body.style.marginRight = '0px';\n            });\n\n            modal_.addEventListener('click', (e) => {\n                if (e.target.classList.contains('modal__container')) {\n                    modal_.classList.remove(modalActiveClass);\n                    document.body.style.overflow = '';\n                    document.body.style.marginRight = '0px';\n                }\n            });\n        }\n    }\n\n    modal('.modal', 'modal--active', '[data-modal]', '.modal__close');\n});\n\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;